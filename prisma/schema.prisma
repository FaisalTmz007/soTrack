// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  email     String   @unique
  password  String
  otp_code  String? @unique
  otp_expired DateTime?
  reset_password String? @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserToken UserToken[]
  Filter    Filter[]
}

model UserToken {
  id        String      @id @default(uuid())
  user_id   String
  token     String  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  User      User     @relation(fields: [user_id], references: [id])
}

model Platform {
  id        String      @id @default(uuid())
  name      String   @unique
  logo_url  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  Filter    Filter[]
  Post      Post[]
}

model Category {
  id        String      @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Filter    Filter[]
}

model Filter {
  id        String      @id @default(uuid())
  parameter String
  is_active Boolean @default(true)
  user_id   String
  platform_id String
  category_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User      User     @relation(fields: [user_id], references: [id])
  Platform  Platform @relation(fields: [platform_id], references: [id])
  Category  Category @relation(fields: [category_id], references: [id])
}

model Post {
  id        String      @id @default(uuid())
  author   String?
  caption     String?
  published_at DateTime?
  crime_type    String?
  likes    Int?
  comments Int?
  post_url  String? @db.Text
  media_url  String? @db.Text
  platform_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Platform  Platform @relation(fields: [platform_id], references: [id])
}